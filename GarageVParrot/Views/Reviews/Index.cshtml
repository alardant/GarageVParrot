@model IEnumerable<GarageVParrot.Models.Review>

<section>
    <h2>Témoignages</h2>
    @if (TempData["Message"] != null)
    {
        <div class="tempdata-form">
            @TempData["Message"]
        </div>
    }
    <div class=" container cards-review">

        @foreach (Review review in Model.OrderByDescending(r => r.datePublished))
        {
            <div class="card card-review">
                <div class="card-header card-header-review d-flex justify-content-between align-items-center">
                    <div class="rating">
                        @for (int r = 0; r < review.Rating; r++)
                        {
                            <i class="bi bi-star-fill"></i>
                        }
                        @for (int r = review.Rating; r < 5; r++)
                        {
                            <i class="bi bi-star"></i>
                        }
                    </div>
                    <div>
                        @{
                            string parameterValue = review.datePublished.ToString("MMMM yyyy");
                        }
                        @Html.DisplayFor(modelItem =>parameterValue)
                    </div>
                </div>
                <div class="card-body card-body-review p-1 d-block d-flex">
                    <q>@Html.DisplayFor(modelItem => review.Description)</q>
                    <p>@Html.DisplayFor(modelItem => review.Name)</p>
                </div>
            </div>
        }
     </div>
     <div class="d-flex justify-content-center">
            <a class="create-review" asp-area="" asp-controller="Reviews" asp-action="Create"><h2>Rédiger un avis</h2></a>
    </div>
</section>

@{
    var contactModel = new GarageVParrot.ViewModels.ContactViewModel
            {
                ReturnUrl = Context.Request.Path
            };
}
@await Html.PartialAsync("_contactForm", contactModel)



