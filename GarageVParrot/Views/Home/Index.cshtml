@model GarageVParrot.ViewModels.HomeViewModel

<section class="services">
    <h2>Nos Services</h2>
	@foreach(Service service in @Model.Services)
	{
		<div class="service-div p-2 container">
			<div class="image-service-container m-2">
				<img class="service-image" src="~/Uploads/ServicesImage/@service.Image" alt="Image du service" />
			</div>
			<div class="service-text">
				<h3 class="service-title mb-1">@Html.DisplayFor(modelItem => service.Title)</h3>
				<p class="text-description">@Html.Raw(service.Description)</p>
			</div>
		</div>
	}
</section>
 
<section class="reviews">
    <h2>Quelques Témoignages</h2>
    <div class="carousel-wrap">
        <div class="owl-carousel owl-theme carousel">
            @{
                List<Review> selectedReviews = Model.Reviews.Where(review => review.Accepted && review.Rating == 5).OrderBy(review => review.datePublished).Take(10).ToList();
            }
            @foreach (Review review in selectedReviews)
            {
                <div class="card-items">
                    <div class="card card-review">
                        <div class="card-header card-header-review">
                            <div class="rating">
                                @for (int r = 0; r < review.Rating; r++)
                                {
                                    <i class="bi bi-star-fill"></i>
                                }
                                @for (int r = review.Rating; r < 5; r++)
                                {
                                    <i class="bi bi-star"></i>
                                }
                            </div>
                            <div>
                                @{
                                    string parameterValue = review.datePublished.ToString("MMMM yyyy");
                                }
                                @Html.DisplayFor(modelItem =>parameterValue)
                            </div>
                        </div>
                        <div class="card-body card-body-review p-1 d-block d-flex">
                            <q>@Html.DisplayFor(modelItem => review.Description)</q>
                            <p>@Html.DisplayFor(modelItem => review.Name)</p>
                        </div>

                    </div>
                </div>
            }
        </div>
    </div>
    <div class="review-link d-flex justify-content-around">
         <a class="nav-link" asp-area="" asp-controller="Reviews" asp-action="Create"><h3>Rédiger un avis</h3></a>
         <a class="nav-link" asp-area="" asp-controller="Reviews" asp-action="Index"><h3>Voir tous les avis</h3></a>
    </div>
</section>

@{
    var contactModel = new GarageVParrot.ViewModels.ContactViewModel
            {
                ReturnUrl = Context.Request.Path
            };
}

@await Html.PartialAsync("_contactForm", contactModel)

@section Scripts {
     <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js" integrity="sha512-bPs7Ae6pVvhOSiIcyUClR7/q2OAsRiovw4vAkX+zJbw3ShAeeqezq50RIIcIURq7Oa20rW2n2q+fyXBNcU9lrw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript" src="~/js/homeScript.js"></script>
    <script type="text/javascript" src="~/js/form.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}